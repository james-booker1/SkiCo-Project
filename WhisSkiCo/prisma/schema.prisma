generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Coach {
  id        Int    @id @default(autoincrement())
  firstname String @unique
  lastname  String @unique
  bio       String
  adminId   Int?
  admin     Admin? @relation(fields: [adminId], references: [id])
}

model User {
  id        Int            @id @default(autoincrement())
  firstname String         @unique
  lastname  String         @unique
  email     String         @unique
  phone     String         @unique
  password  String
  course    CoursetoUser[]
  reviews   Review[]
}

model Review {
  id      Int      @id @default(autoincrement())
  rating  Int
  comment String
  userId  Int
  adminId Int
  admin   Admin    @relation(fields: [adminId], references: [id])
  user    User     @relation(fields: [userId], references: [id])
  courses Course[]
}

model Course {
  id           Int            @id @default(autoincrement())
  name         String
  price        BigInt
  description  String
  resortId     Int?
  adminId      Int?
  admin        Admin?          @relation(fields: [adminId], references: [id])
  resort       Resort?      @relation(fields: [resortId], references: [id])
  coursetouser CoursetoUser[]
  review       Review[]
}

model Resort {
  id          Int      @id @default(autoincrement())
  name        String
  province    String
  country     String
  description String
  adminId     Int?
  admin       Admin?    @relation(fields: [adminId], references: [id])
  courses     Course[]
}

model Admin {
  id        Int      @id @default(autoincrement())
  firstname String   @unique
  lastname  String   @unique
  email     String   @unique
  password  String
  coaches   Coach[]
  courses   Course[]
  resorts   Resort[]
  review    Review[]
}

model CoursetoUser {
  id       Int    @id @default(autoincrement())
  userId   Int
  courseId Int
  course   Course @relation(fields: [courseId], references: [id])
  user     User   @relation(fields: [userId], references: [id])
}
